//================================================================================================
//
//背景処理[bg.cpp]
//Author:Hirasawa Shion
//
//================================================================================================
#include "../Main/manager.h"
#include "object2D.h"
#include "bg.h"

/***	背景の処理優先順位	***/
#define PRIORITY_BG		(0)

//静的メンバ変数宣言
//テクスチャ
int		CBg::m_nTextureID = ERROR_ID;

//=======================================
//コンストラクタ
//=======================================
CBg::CBg() : CObject2D(PRIORITY_BG)
{
	//メンバ変数クリア
}

//=======================================
//デストラクタ
//=======================================
CBg::~CBg()
{

}

//=======================================
//生成処理
//=======================================
CBg *CBg::Create(void)
{
	//背景インスタンスの生成
	CBg *pBg = new CBg;

	//インスタンスが生成された
	if (pBg != NULL)
	{
		//初期化処理
		pBg->Init();

		//テクスチャ割り当て
		pBg->BindTexture(CManager::GetTexture()->GetAddress(m_nTextureID));
	}

	//背景を返す
	return pBg;
}

//=======================================
//初期化処理
//=======================================
HRESULT CBg::Init(void)
{
	if (FAILED(CObject2D::Init(D3DXVECTOR3(HALF_WIDTH, HALF_HEIGHT, 0.0f), HALF_WIDTH, HALF_HEIGHT, D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.3f), VEC2_INIT, D3DXVECTOR2(1.0f, 1.0f))))
	{//失敗したらエラーを返す
		return E_FAIL;
	}

	//種類設定
	SetType(CObject::TYPE_BG);

	//初期化成功
	return S_OK;
}

//=======================================
//終了処理
//=======================================
void CBg::Uninit(void)
{
	//頂点バッファの破棄など
	CObject2D::Uninit();
}

//=======================================
//更新処理
//=======================================
void CBg::Update(void)
{

}

//=======================================
//描画処理
//=======================================
void CBg::Draw(void)
{
	//自分を描画
	CObject2D::Draw();
}

//=======================================
//テクスチャ読み込み設定
//=======================================
HRESULT CBg::Load(char *pPath)
{
	//テクスチャ読み込み
	m_nTextureID = CManager::GetTexture()->Regist(pPath);

	//テクスチャ読み込み成功
	return S_OK;
}